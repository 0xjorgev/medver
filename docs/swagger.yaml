# this is an example of the Uber API
# as a demonstration of an API spec in YAML
swagger: '2.0'
info:
  title: Somosport Core API
  description: Basic description of services provided by Somosport Core
  version: "1.0"
# the domain of the service
# host: somosportpocdev.herokuapp.com
host: localhost:3000
# array of all schemes that your API supports
schemes:
  - http
  - https
# will be prefixed to all paths
basePath: /api/v1.0
produces:
  - application/json
paths:
  /phase/{phase_id}/group_round_match:
    get:
      summary: Given a Phase ID, returns the groups, rounds & matches associated
      description: Given a Phase ID, returns the groups, rounds & matches associated
      tags:
        - Phase
          Match
      responses:
        200:
          description: Match event stream
      parameters:
        - name: phase_id
          in: path
          description: Phase ID
          required: true
          type: integer
          format: integer

  /event/{match_id}:
    get:
      summary: Gets the events of a match, given its category_id
      description: Gets the events of a match, given its category_id
      tags:
        - Event
      responses:
        200:
          description: Match event stream
      parameters:
        - name: match_id
          in: path
          description: Match ID
          required: true
          type: integer
          format: integer

  /category/{category_id}/standing_table:
    get:
      summary: Gets the current standing table for a given category_id
      description: Gets the current standing table for a given category_id
      tags:
        - Standing table
      responses:
        200:
          description: the current standing_table of the category
      parameters:
        - name: category_id
          in: path
          description: Category ID
          required: true
          type: integer
          format: integer

  /group/{group_id}/standing_table:
    get:
      summary: Gets the current standing table for a given group_id
      description: Gets the current standing table for a given group_id
      tags:
        - Standing table
      responses:
        200:
          description: the current standing_table of the group
      parameters:
        - name: group_id
          in: path
          description: group ID
          required: true
          type: integer
          format: integer
  /team:
    get:
      summary: Team services
      description:
        Get info of all teams
      tags:
        - Team
      responses:
        200:
          description: An array of products
          schema:
            type: array
            items:
              $ref: '#/definitions/Product'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /team/{team_id}:
    get:
      summary: Team services
      description:
        Get info of all teams
      parameters:
        - name: team_id
          in: path
          description: Team ID
          required: true
          type: integer
          format: integer
      tags:
        - Team
      responses:
        200:
          description: An array of products
          schema:
            type: array
            items:
              $ref: '#/definitions/Product'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /player/{player_id}:
    get:
      summary: Gets player's info
      description: Gets player's info
      parameters:
        - name: player_id
          in: path
          required: true
          type: integer
      tags:
        - Player
      responses:
        200:
          description: Information about a single player
  /estimates/price:
    get:
      summary: Price Estimates
      description: |
        The Price Estimates endpoint returns an estimated price range
        for each product offered at a given location. The price estimate is
        provided as a formatted string with the full price range and the localized
        currency symbol.<br><br>The response also includes low and high estimates,
        and the [ISO 4217](http://en.wikipedia.org/wiki/ISO_4217) currency code for
        situations requiring currency conversion. When surge is active for a particular
        product, its surge_multiplier will be greater than 1, but the price estimate
        already factors in this multiplier.
      parameters:
        - name: start_latitude
          in: query
          description: Latitude component of start location.
          required: true
          type: number
          format: double
        - name: start_longitude
          in: query
          description: Longitude component of start location.
          required: true
          type: number
          format: double
        - name: end_latitude
          in: query
          description: Latitude component of end location.
          required: true
          type: number
          format: double
        - name: end_longitude
          in: query
          description: Longitude component of end location.
          required: true
          type: number
          format: double
      tags:
        - Estimates
      responses:
        200:
          description: An array of price estimates by product
          schema:
            type: array
            items:
              $ref: '#/definitions/PriceEstimate'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /estimates/time:
    get:
      summary: Time Estimates
      description: The Time Estimates endpoint returns ETAs for all products offered at a given location, with the responses expressed as integers in seconds. We recommend that this endpoint be called every minute to provide the most accurate, up-to-date ETAs.
      parameters:
        - name: start_latitude
          in: query
          description: Latitude component of start location.
          required: true
          type: number
          format: double
        - name: start_longitude
          in: query
          description: Longitude component of start location.
          required: true
          type: number
          format: double
        - name: customer_uuid
          in: query
          type: string
          format: uuid
          description: Unique customer identifier to be used for experience customization.
        - name: product_id
          in: query
          type: string
          description: Unique identifier representing a specific product for a given latitude & longitude.
      tags:
        - Estimates
      responses:
        200:
          description: An array of products
          schema:
            type: array
            items:
              $ref: '#/definitions/Product'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /me:
    get:
      summary: User Profile
      description: The User Profile endpoint returns information about the Uber user that has authorized with the application.
      tags:
        - User
      responses:
        200:
          description: Profile information for a user
          schema:
            $ref: '#/definitions/Profile'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /history:
    get:
      summary: User Activity
      description: The User Activity endpoint returns data about a user's lifetime activity with Uber. The response will include pickup locations and times, dropoff locations and times, the distance of past requests, and information about which products were requested.<br><br>The history array in the response will have a maximum length based on the limit parameter. The response value count may exceed limit, therefore subsequent API requests may be necessary.
      parameters:
        - name: offset
          in: query
          type: integer
          format: int32
          description: Offset the list of returned results by this amount. Default is zero.
        - name: limit
          in: query
          type: integer
          format: int32
          description: Number of items to retrieve. Default is 5, maximum is 100.
      tags:
        - User
      responses:
        200:
          description: History information for the given user
          schema:
            $ref: '#/definitions/Activities'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  Team:
    type: object
    properties:
      id:
        type: string
        description: <<add id description>>
      name:
        type: string
        description: <<add name description>>
      logo_url:
        type: string
        description: <<add logo_url description>>
      short_name:
        type: string
        description: <<add short_name description>>
      description:
        type: string
        description: <<add description description>>
      category_type_id:
        type: string
        description: <<add category_typ description>>
      organization_id:
        type: string
        description: <<add organization description>>
      active:
        type: string
        description: <<add active description>>
      created_at:
        type: string
        description: <<add created_at description>>
      updated_at:
        type: string
        description: <<add updated_at description>>
      category_type:
        type: string
        description: <<add category_typ description>>
      organization:
        type: string
        description: <<add organization description>>
      player_team:
        type: string
        description: <<add player_team description>>
  PriceEstimate:
    type: object
    properties:
      product_id:
        type: string
        description: Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles
      currency_code:
        type: string
        description: "[ISO 4217](http://en.wikipedia.org/wiki/ISO_4217) currency code."
      display_name:
        type: string
        description: Display name of product.
      estimate:
        type: string
        description: Formatted string of estimate in local currency of the start location. Estimate could be a range, a single number (flat rate) or "Metered" for TAXI.
      low_estimate:
        type: number
        description: Lower bound of the estimated price.
      high_estimate:
        type: number
        description: Upper bound of the estimated price.
      surge_multiplier:
        type: number
        description: Expected surge multiplier. Surge is active if surge_multiplier is greater than 1. Price estimate already factors in the surge multiplier.
  Profile:
    type: object
    properties:
      first_name:
        type: string
        description: First name of the Uber user.
      last_name:
        type: string
        description: Last name of the Uber user.
      email:
        type: string
        description: Email address of the Uber user
      picture:
        type: string
        description: Image URL of the Uber user.
      promo_code:
        type: string
        description: Promo code of the Uber user.
  Activity:
    type: object
    properties:
      uuid:
        type: string
        description: Unique identifier for the activity
  Activities:
    type: object
    properties:
      offset:
        type: integer
        format: int32
        description: Position in pagination.
      limit:
        type: integer
        format: int32
        description: Number of items to retrieve (100 max).
      count:
        type: integer
        format: int32
        description: Total number of items available.
      history:
        type: array
        items:
          $ref: '#/definitions/Activity'
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
