swagger: '2.0'
info:
  title: Somosport Core API!
  description: Basic description of services provided by Somosport Core
  version: "1.0"
# the domain of the service
# host: somosportpocdev.herokuapp.com
host: localhost:3000
# array of all schemes that your API supports
schemes:
  - http
  - https
# will be prefixed to all paths
basePath: /api/v1.0
produces:
  - application/json
paths:
  /phase/{phase_id}/group_round_match:
    get:
      summary: Given a Phase ID, returns the groups, rounds & matches associated
      description: Given a Phase ID, returns the groups, rounds & matches associated
      tags:
        - Phase
          Match
      responses:
        200:
          description: Match event stream
      parameters:
        - name: phase_id
          in: path
          description: Phase ID
          required: true
          type: integer
          format: integer

  /event/{match_id}:
    get:
      summary: Gets the events of a match, given its category_id
      description: Gets the events of a match, given its category_id
      tags:
        - Event
      responses:
        200:
          description: Match event stream
      parameters:
        - name: match_id
          in: path
          description: Match ID
          required: true
          type: integer
          format: integer

  /category/{category_id}/standing_table:
    get:
      summary: Gets the current standing table for a given category_id
      description: Gets the current standing table for a given category_id
      tags:
        - Standing table
      responses:
        200:
          description: the current standing_table of the category
      parameters:
        - name: category_id
          in: path
          description: Category ID
          required: true
          type: integer
          format: integer

  /group/{group_id}/standing_table:
    get:
      summary: Gets the current standing table for a given group_id
      description: Gets the current standing table for a given group_id
      tags:
        - Standing table
      responses:
        200:
          description: the current standing_table of the group
      parameters:
        - name: group_id
          in: path
          description: group ID
          required: true
          type: integer
          format: integer
  /team:
    get:
      summary: Team services
      description:
        Get info of all teams
      tags:
        - Team
      responses:
        200:
          description: An array of products
          schema:
            type: array
            items:
              $ref: '#/definitions/Product'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /team/{team_id}:
    get:
      summary: Team services
      description:
        Get info of all teams
      parameters:
        - name: team_id
          in: path
          description: Team ID
          required: true
          type: integer
          format: integer
      tags:
        - Team
      responses:
        200:
          description: An array of products
          schema:
            type: array
            items:
              $ref: '#/definitions/Product'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /player/{player_id}:
    get:
      summary: Gets player's info
      description: Gets player's info
      parameters:
        - name: player_id
          in: path
          required: true
          type: integer
      tags:
        - Player
      responses:
        200:
          description: Information about a single player
  /discipline/{discipline_id}/subdiscipline:
    get:
      description:
      produces:
      - application/json
      tags:
        - Discipline
      parameters:
        - name: discipline_id
          in: path
          required: true
          type: integer
      responses:
        200:
          description:
      security: []
  /match:
    get:
      description: Gets all matches
      tags:
        - Match
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: list of all matches
      security: []
    post:
      description: Creates a match
      tags:
        - Match
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        x-is-map: false
        schema:
          $ref: '#/definitions/CreateMatchRequest'
      responses:
        200:
          description: list of all matches
      security: []
  /competition/{competition_id}:
    put:
      description: Competition Update
      produces:
      - application/json
      tags:
        - Competition
      parameters:
      - name: Body
        in: body
        required: true
        x-is-map: false
        schema:
          $ref: '#/definitions/UpdateCompetitionRequest'
      responses:
        200:
          description:
      security: []
  /phase/1/group_team:
    get:
      description:
      operationId: Get_teams by phase_
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description:
      security: []
  /season:
    get:
      description:
      operationId: Get_Full Season List_
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        x-is-map: false
        schema:
          $ref: '#/definitions/FullSeasonListRequest'
      responses:
        200:
          description:
      security: []
  /competition:
    get:
      description: Full Listo of Competitions
      operationId: Get_Competition List_
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description:
      security: []
    post:
      description: Competition Creation
      operationId: Create Competition_
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        x-is-map: false
        schema:
          $ref: '#/definitions/CreateCompetitionRequest'
      responses:
        200:
          description:
      security: []
  /phase:
    get:
      description:
      operationId: get phase_
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description:
      security: []
  /competition/145:
    get:
      description: Full competition Object
      operationId: Get_Competition By Competition_id_
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description:
      security: []
  /gender:
    get:
      description:
      operationId: Get_Gender List_
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        x-is-map: false
        schema:
          $ref: '#/definitions/GenderListRequest'
      responses:
        200:
          description:
      security: []
  /season/1:
    get:
      description:
      operationId: Get_Season by Id_
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        x-is-map: false
        schema:
          $ref: '#/definitions/SeasonbyIdRequest'
      responses:
        200:
          description:
      security: []
    post:
      description:
      operationId: Create_Season Creation_
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        x-is-map: false
        schema:
          $ref: '#/definitions/SeasonCreationRequest'
      responses:
        200:
          description:
      security: []
  /gender/1:
    get:
      description:
      operationId: Get_Gender By Gender Id_
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        x-is-map: false
        schema:
          $ref: '#/definitions/GenderByGenderIdRequest'
      responses:
        200:
          description:
      security: []
  /competition/1/season/:
    get:
      description: List of seasons for each competition
      operationId: Get_Seasons by Competition_
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description:
      security: []
  /discipline/1:
    get:
      description: Contains related sub disciplines
      operationId: Get_Discipline By ID_
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description:
      security: []
  /round:
    get:
      description:
      operationId: get round_
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description:
      security: []
  /season/2:
    put:
      description:
      operationId: Update_Season Update_
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        x-is-map: false
        schema:
          $ref: '#/definitions/SeasonUpdateRequest'
      responses:
        200:
          description:
      security: []
  /competition/competition_type:
    get:
      description: Full List of Competitions Type's
      operationId: Get_Competition Type_
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description:
      security: []
  /category/1/team:
    get:
      description:
      operationId: Get_team x category_
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description:
      security: []
  /discipline/:
    get:
      description:
      operationId: Get All Disciplines_
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        x-is-map: false
        schema:
          $ref: '#/definitions/GetAllDisciplinesRequest'
      responses:
        200:
          description:
      security: []
  /group/:
    get:
      description:
      operationId: get Group_
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description:
      security: []
    post:
      description: Creates a group
      tags:
        - Group
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        x-is-map: false
        schema:
          $ref: '#/definitions/CreateGroupRequest'
      responses:
        200:
          description: list of all matches
      security: []
definitions:
  UpdateCompetitionRequest:
    title: Update CompetitionRequest
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      discipline_id:
        type: integer
        format: int32
      subdiscipline_id:
        type: integer
        format: int32
      competition_type_id:
        type: integer
        format: int32
    required:
    - name
    - description
    - discipline_id
    - subdiscipline_id
    - competition_type_id
  FullSeasonListRequest:
    title: Full Season ListRequest
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      discipline_id:
        type: integer
        format: int32
      subdiscipline_id:
        type: integer
        format: int32
      competition_type_id:
        type: integer
        format: int32
    required:
    - name
    - description
    - discipline_id
    - subdiscipline_id
    - competition_type_id
  GenderListRequest:
    title: Gender ListRequest
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      discipline_id:
        type: integer
        format: int32
      subdiscipline_id:
        type: integer
        format: int32
      competition_type_id:
        type: integer
        format: int32
    required:
    - name
    - description
    - discipline_id
    - subdiscipline_id
    - competition_type_id
  SeasonbyIdRequest:
    title: Season by IdRequest
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      discipline_id:
        type: integer
        format: int32
      subdiscipline_id:
        type: integer
        format: int32
      competition_type_id:
        type: integer
        format: int32
    required:
    - name
    - description
    - discipline_id
    - subdiscipline_id
    - competition_type_id
  GenderByGenderIdRequest:
    title: Gender By Gender IdRequest
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      discipline_id:
        type: integer
        format: int32
      subdiscipline_id:
        type: integer
        format: int32
      competition_type_id:
        type: integer
        format: int32
    required:
    - name
    - description
    - discipline_id
    - subdiscipline_id
    - competition_type_id
  CreateCompetitionRequest:
    title: Create CompetitionRequest
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      discipline_id:
        type: integer
        format: int32
      subdiscipline_id:
        type: integer
        format: int32
      competition_type_id:
        type: integer
        format: int32
    required:
    - name
    - description
    - discipline_id
    - subdiscipline_id
    - competition_type_id
  SeasonUpdateRequest:
    title: Season UpdateRequest
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      game_title:
        type: string
      active:
        type: boolean
      init_at:
        type: string
      ends_at:
        type: string
    required:
    - name
    - description
    - game_title
    - active
    - init_at
    - ends_at
  SeasonCreationRequest:
    title: Season CreationRequest
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      game_title:
        type: string
      active:
        type: boolean
      init_at:
        type: string
      ends_at:
        type: string
    required:
    - name
    - description
    - game_title
    - active
    - init_at
    - ends_at
  GetAllDisciplinesRequest:
    title: Get All DisciplinesRequest
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      discipline_id:
        type: integer
        format: int32
      subdiscipline_id:
        type: integer
        format: int32
      competition_type_id:
        type: integer
        format: int32
    required:
    - name
    - description
    - discipline_id
    - subdiscipline_id
    - competition_type_id
  CreateMatchRequest:
    title: Match Creation Request
    type: object
    properties:
      number:
        type: integer
      location:
        type: string
      home_team_id:
        type: integer
      visitor_team_id:
        type: integer
      home_team_score:
        type: integer
      visitor_team_score:
        type: integer
      round_id:
        type: integer
      date:
        type: date
    required:
    - home_team_id
    - visitor_team_id
    - date
    - location
    - round_id
  CreateGroupRequest:
    title: Match Creation Request
    type: object
    properties:
      name:
        type: string
      phase_id:
        type: integer
      participant_team:
        type: integer
      classified_team:
        type: integer

    required:
    - name
    - phase_id

